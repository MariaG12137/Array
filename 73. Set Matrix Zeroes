/*
Given an m x n matrix. If an element is 0, set its entire row and column to 0. Do it in-place.

Follow up:

A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?
*/
var setZeroes = function(matrix) {
    let ZeroCol = [];
    const row = matrix.length;
    const col = matrix[0].length;
    let rowFill = false;
    let colFill = false;
    
    for(let i=0; i<row; i++){
        for(let j=0; j<col; j++){
            if(matrix[i][j] === 0){
                if(i===0){
                    rowFill = true;
                }
                if(j===0){
                    colFill = true;
                }else{
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
    }

    for(let i=1; i<row; i++){
        for(let j=1; j<col; j++){
            if(matrix[i][0]===0 || matrix[0][j]===0){
                matrix[i][j] = 0;
            }
        }
    }
    if(rowFill === true){
        for(let j=0; j<col; j++){
            matrix[0][j] = 0;
        }
    }
    if(colFill === true){
        for(let i=0; i<row; i++){
            matrix[i][0] = 0;
        }
    }

    return matrix;
};

/*
Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).

You may assume that the intervals were initially sorted according to their start times.
*/
var insert = function(intervals, newInterval) {
    let index = 0;
    let place = false;
    for(let i=0; i<intervals.length; i++){
        if(intervals[i][0]>=newInterval[0]){
            if(i===0){
                intervals.unshift(newInterval);
            }else{
                intervals.splice(i,0,newInterval);   
            }
            place = true;
            index = i;
            break;
        }
    }
    if(place === false){
        intervals.push(newInterval);
        index = intervals.length-1;
    }
    while(index !== intervals.length){
        if(intervals[index-1]!==undefined && intervals[index][0]<=intervals[index-1][1]){
            intervals[index-1] = [Math.min(intervals[index-1][0],intervals[index][0]),Math.max(intervals[index-1][1],intervals[index][1])];
            intervals.splice(index,1);
        }else{
            index++;
        }
    }
    return intervals;
};

/*
Given a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either (a==c and b==d), or (a==d and b==c) - that is, one domino can be rotated to be equal to another domino.

Return the number of pairs (i, j) for which 0 <= i < j < dominoes.length, and dominoes[i] is equivalent to dominoes[j].
*/
var numEquivDominoPairs = function(dominoes) {
    let map = new Map();
    for(let pair of dominoes){
        let pairString = pair.sort((a,b)=>a-b).join('');
        if(!map.has(pairString)){
            map.set(pairString,1);
        }else{
            map.set(pairString, map.get(pairString)+1);
        }
    }
    let result = 0;
    for(let value of map.values()){
        if(value>1){
            for(let i=1; i<value; i++){
                result += i;
            }
        }
    }
    return result;
};

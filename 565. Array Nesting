/*
A zero-indexed array A of length N contains all integers from 0 to N-1. Find and return the longest length of set S, where S[i] = {A[i], A[A[i]], A[A[A[i]]], ... } subjected to the rule below.

Suppose the first element in S starts with the selection of element A[i] of index = i, the next element in S should be A[A[i]], and then A[A[A[i]]]â€¦ By that analogy, we stop adding right before a duplicate element occurs in S.
*/
var arrayNesting = function(nums) {
    let result = 0;
    
    for(let i=0; i<nums.length; i++){
        if(nums[i]!==null){
            let max = 0;
            let idx = i;
            while(nums[idx]!==null){
                let temp = nums[idx];
                nums[idx] =null;
                idx = temp;
                max++;
            }
            result = Math.max(result,max);
        }
        
    }
 
    return result;
};
